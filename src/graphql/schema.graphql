type Query {
    # Categories
    category(id: ID!): Category

    # Products
    products: [Product!]!
    product(id: ID!): Product
}


type Mutation {
    # Auth
    login(email: String!, password: String!): AuthResponse

    # Categories
    addCategory(dto: CreateCategoryDto): Category

    # Products
    addProduct(dto: CreateProductDto!): Product
    updateProduct(id: ID!, dto: UpdateProductDto!): Product
    deleteProduct(id: ID!): ID
}


type AuthResponse {
    access_token: String!
    user: User!
}


type User {
    id: ID!
    email: String!
    role: String!
    createdAt: String!
}


type Product {
    id: ID!
    name: String!
    description: String!
    price: Int!
    image: String!
    createdAt: String!
    categoryId: ID!
    category: Category!
}


type Category {
    id: ID!
    name: String!
    image: String!
    products: [Product!]!
}


input CreateProductDto {
    name: String!
    description: String!
    price: Int!
    image: String!
    categoryId: ID!
}


input UpdateProductDto {
    name: String
    description: String
    price: Int
    image: String
    categoryId: ID
}


input CreateCategoryDto {
    name: CategoryNameType!
    image: URL!
}


input UpdateCategoryDto {
    name: CategoryNameType
    image: URL
}


scalar CategoryNameType
